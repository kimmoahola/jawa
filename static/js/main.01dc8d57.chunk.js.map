{"version":3,"sources":["utils.js","api.js","config.js","components/Temperature.js","components/Precipitation.js","components/Wind.js","components/FeelsLike.js","components/TempWindPrecip.js","components/DateInfo.js","components/Time.js","components/Forecast.js","components/Weather.js","components/DataLayer.js","App.js","serviceWorker.js","index.js"],"names":["xmlToJson","xml","obj","nodeType","attributes","length","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","i","push","old","makeArraySortedByKey","Object","keys","map","key","sort","first","second","convertToForecastData","tsByValuesObject","reduce","previousValue","value","ts","fromUnixTime","tsStartOfHour","startOfHour","tsStartOfHourUnix","getUnixTime","startOfDayUnix","startOfDay","g","items","h","timestampsToValuesObject","responseData","currentValue","Date","tsUnix","name","Number","fetchXml","a","url","fetch","result","DOMParser","text","parseFromString","fetchForecast","location","undefined","startTime","addHours","toISOString","endTime","endOfDay","latlon","lat","lng","OLD_DATA_CHECK_INTERVAL","FORECAST_REFRESH_INTERVAL","LOCATION_UPDATE_INTERVAL","INTERESTING_HOURS","Temperature","temperature","isNaN","className","Math","round","Precipitation","precipitation1h","toFixed","Wind","windspeedms","FeelsLike","t","v","feelsLikeTemperature","pow","diff","abs","TempWindPrecip","DateInfo","getDay","isToday","isTomorrow","format","Time","includeMinutes","formatString","ForOneDay","dayData","filtered","interestingHours","filter","d","isSameDay","getHours","concat","indexOf","filterByInterestingHours2","index","Forecast","data","index1","Weather","forecastData","onLocateClick","onClick","DataLayer","useState","setForecastData","lastForecastDataAttempt","setLastForecastDataAttempt","lastLocation","setLastLocation","mark","setMark","useEffect","timer","setTimeout","m","clearTimeout","isError","setIsError","fetchData","now","console","error","JSON","stringify","log","App","setLocation","gotLocation","loc","newLocation","coords","latitude","longitude","noLocation","err","askLocation","navigator","geolocation","getCurrentPosition","maximumAge","permissions","query","then","state","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"4QACO,SAASA,EAAUC,GAExB,IAAIC,EAAM,GAEV,GAAqB,IAAjBD,EAAIE,UAGN,GAAIF,EAAIG,WAAWC,OAAS,EAAG,CAC7BH,EAAI,eAAiB,GACrB,IAAK,IAAII,EAAI,EAAGA,EAAIL,EAAIG,WAAWC,OAAQC,GAAK,EAAG,CACjD,IAAMC,EAAYN,EAAIG,WAAWI,KAAKF,GACtCJ,EAAI,eAAeK,EAAUE,UAAYF,EAAUG,iBAG7B,IAAjBT,EAAIE,WAEbD,EAAMD,EAAIS,WAKZ,GACET,EAAIU,iBACsB,IAA1BV,EAAIW,WAAWP,QACgB,IAA/BJ,EAAIW,WAAW,GAAGT,SAElBD,EAAMD,EAAIW,WAAW,GAAGF,eACnB,GAAIT,EAAIU,gBACb,IAAK,IAAIE,EAAI,EAAGA,EAAIZ,EAAIW,WAAWP,OAAQQ,GAAK,EAAG,CACjD,IAAML,EAAOP,EAAIW,WAAWJ,KAAKK,GAC3BJ,EAAWD,EAAKC,SACtB,GAA6B,qBAAlBP,EAAIO,GACbP,EAAIO,GAAYT,EAAUQ,OACrB,CACL,GAAkC,qBAAvBN,EAAIO,GAAUK,KAAsB,CAC7C,IAAMC,EAAMb,EAAIO,GAChBP,EAAIO,GAAY,GAChBP,EAAIO,GAAUK,KAAKC,GAErBb,EAAIO,GAAUK,KAAKd,EAAUQ,KAInC,OAAON,E,6mBClCT,SAASc,EAAqBd,GAC5B,OAAOe,OAAOC,KAAKhB,GAChBiB,KAAI,SAASC,GACZ,MAAO,CAACA,EAAKlB,EAAIkB,OAElBC,MAAK,SAASC,EAAOC,GACpB,OAAOD,EAAM,GAAKC,EAAO,MAI/B,SAASC,EAAT,GAAsD,IAArBC,EAAoB,EAApBA,iBAC/B,OAAOT,EACLC,OAAOC,KAAKO,GAAkBC,QAAO,SAACC,EAAeP,GACnD,IAAMQ,EAAQH,EAAiBL,GAEzBS,EAAKC,YAAaV,GAClBW,EAAgBC,YAAYH,GAG5BI,EAAoBC,YAAYH,GAChCI,EAAiBD,YAAYE,YAAWP,IAY9C,OAVAF,EAAcQ,GAAd,KACKR,EAAcQ,GADnB,eAEGF,EAFH,KAGQN,EAAcQ,GACdR,EAAcQ,GAAgBF,GAC9B,GALR,GAMOL,KAIAD,IACN,KACHR,KAAI,SAAAkB,GAAC,MAAK,CACVD,WAAYN,YAAaO,EAAE,IAC3BC,MAAOtB,EAAqBqB,EAAE,IAAIlB,KAAI,SAAAoB,GAAC,UACrCV,GAAIC,YAAaS,EAAE,KAChBA,EAAE,WAKX,SAASC,EAAT,GAAqD,IAAjBC,EAAgB,EAAhBA,aAClC,OACGA,GACCA,EAAa,0BACbA,EAAa,yBAAyB,eACxC,IACAf,QAAO,SAACC,EAAee,GACvB,IAAMlC,EAAOkC,EAAa,sBAEpBb,EAAK,IAAIc,KAAKnC,EAAK,eAGnBoC,EAASV,YAAYL,GAErBgB,EAAOrC,EAAK,uBACZoB,EAAQkB,OAAOtC,EAAK,yBAO1B,OALAmB,EAAciB,GAAd,KACKjB,EAAciB,GADnB,kBAEQC,EAAOjB,IAGRD,IACN,I,SAGUoB,E,8EAAf,+BAAAC,EAAA,6DAA0BC,EAA1B,EAA0BA,IAA1B,SACuBC,MAAMD,GAD7B,cACQE,EADR,YAESnD,EAFT,KAGI,IAAIoD,UAHR,SAG0CD,EAAOE,OAHjD,oCAGoBC,gBAHpB,eAGyD,YAHzD,+E,sBAOO,SAAeC,EAAtB,kC,4CAAO,qCAAAP,EAAA,yDAA+BQ,EAA/B,EAA+BA,SAA/B,8CAEIC,GAFJ,cAICC,EAAYC,YAAS,IAAIhB,MAAS,GAAGiB,cACrCC,EAAUC,YAASH,YAAS,IAAIhB,KAAQ,KAASiB,cACjDG,EAND,UAMaP,EAASQ,IANtB,YAM6BR,EAASS,KANtC,SAQsBlB,EAAS,CAClCE,IAAI,wHAAD,OAA0Hc,EAA1H,yEAAiML,EAAjM,oBAAsNG,KATtN,cAQCpB,EARD,yBAYEjB,EAAsB,CAC3BC,iBAAkBe,EAAyB,CAAEC,oBAb1C,6C,sBCtFA,IAAMyB,EAA0B,IAC1BC,EAA4B,KAC5BC,EAA2B,KAC3BC,EAAoB,CAAC,EAAG,GAAI,ICDlC,SAASC,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,YAC5B,OAAOC,MAAMD,GACX,2DAEA,yBAAKE,UAAU,eACb,0BAAMA,UAAU,sBAAsBC,KAAKC,MAAMJ,IACjD,0BAAME,UAAU,sBAAhB,UCNC,SAASG,EAAT,GAA6C,IAApBC,EAAmB,EAAnBA,gBAC1BJ,EAAY,GACZpB,EAAO,GAiBX,OAfImB,MAAMK,IACRJ,EAAY,aACZpB,EAAO,mBAEHwB,EAAkB,GACpBJ,EAAY,eACZpB,EAAI,yBAAqBwB,EAAgBC,QAAQ,GAA7C,WACKD,EAAkB,GAC3BxB,EAAO,mBACEwB,EAAkB,IAC3BJ,EAAY,aACZpB,EAAO,eAIJ,yBAAKoB,UAAWA,GAAYpB,GCnB9B,SAAS0B,EAAT,GAAgC,IAAhBC,EAAe,EAAfA,YACjBP,EAAY,GACZpB,EAAO,GAiBX,OAfImB,MAAMQ,IACRP,EAAY,aACZpB,EAAO,oBAEH2B,EAAc,GAChBP,EAAY,eACZpB,EAAI,yBAAqBqB,KAAKC,MAAMK,GAAhC,UACKA,EAAc,IACvB3B,EAAO,oBACE2B,EAAc,IACvBP,EAAY,aACZpB,EAAO,gBAIJ,yBAAKoB,UAAWA,GAAYpB,GCT9B,SAAS4B,EAAT,GAAkD,IAT1CC,EAAGC,EASUZ,EAA4B,EAA5BA,YAAaS,EAAe,EAAfA,YACnCP,EAAY,GACZpB,EAAO,GAEX,GAAImB,MAAMD,IAAgBC,MAAMQ,GAC9B3B,EAAO,OACF,CACL,IAAM+B,GAhBQD,EAgBkCH,EAdhD,MACA,OAHWE,EAgBwBX,GAZnC,OAASG,KAAKW,IAAIF,EAAG,KACrB,MAASD,EAAIR,KAAKW,IAAIF,EAAG,MAYnBG,EAAOZ,KAAKa,IAAIH,EAAuBb,GACzCe,EAAO,EACTjC,EAAO,IAEPA,EAAI,sBAAkBqB,KAAKC,MAAMS,GAA7B,SAGFX,EADEa,EAAO,EACG,eAEA,cAKlB,OAAO,yBAAKb,UAAWA,GAAYpB,GC5B9B,SAASmC,EAAT,GAAwE,IAA9CjB,EAA6C,EAA7CA,YAAaS,EAAgC,EAAhCA,YAAaH,EAAmB,EAAnBA,gBACzD,OACE,oCACE,kBAACP,EAAD,CAAaC,YAAaA,IAC1B,kBAACU,EAAD,CAAWV,YAAaA,EAAaS,YAAaA,IAClD,kBAACD,EAAD,CAAMC,YAAaA,IACnB,kBAACJ,EAAD,CAAeC,gBAAiBA,K,4BCI/B,SAASY,EAAT,GAA2B,IAAP5D,EAAM,EAANA,GACzB,OACE,oCAbK,CACL,YACA,YACA,UACA,cACA,UACA,YACA,YAOgBA,EAfG6D,UAgBhB,MACAC,YAAQ9D,GACL,kBACA+D,YAAW/D,GACX,WACAgE,YAAOhE,EAAI,UCtBd,SAASiE,IAA0D,IAAD,yDAA3B,CAAEC,gBAAgB,GAAzClE,EAAkD,EAAlDA,GACfmE,EADiE,EAA9CD,eACa,QAAU,IAEhD,OAAO,yBAAKtB,UAAU,QAAf,OAA2BoB,YAAOhE,EAAImE,I,WCc/C,SAASC,EAAT,GAAiC,IAAZC,EAAW,EAAXA,QACbC,EAdR,YAA2D,IAAtB7D,EAAqB,EAArBA,MAAOF,EAAc,EAAdA,WACpCgE,EAAmB,CACvB,IAAIzD,KACJgB,YAAS,IAAIhB,KAAQ,GACrBgB,YAAS,IAAIhB,KAAQ,IAEpB0D,QAAO,SAAAC,GAAC,OAAIC,YAAUD,EAAGlE,MACzBjB,KAAI,SAAAmF,GAAC,OAAIA,EAAEE,cACXC,OAAOpC,GAEV,OAAO/B,EAAM+D,QAAO,SAAAlB,GAAC,OAAsD,IAAlDiB,EAAiBM,QAAQvB,EAAC,GAAOqB,eAIzCG,CAA0B,CACzCrE,MAAO4D,EAAO,MACd9D,WAAY8D,EAAO,aAGrB,OAAwB,IAApBC,EAAS9F,OACJ,KAIP,oCACE,yBAAKoE,UAAU,iBACb,kBAACgB,EAAD,CAAU5D,GAAIqE,EAAO,cAEvB,yBAAKzB,UAAU,qBACZ0B,EAAShF,KAAI,SAACN,EAAG+F,GAAJ,OACZ,yBAAKxF,IAAKwF,EAAOnC,UAAU,gBACzB,kBAACqB,EAAD,CAAMjE,GAAIhB,EAAC,KAEX,yBAAK4D,UAAU,kBACb,kBAACe,EAAD,CACEjB,YAAa1D,EAAC,YACdmE,YAAanE,EAAC,YACdgE,gBAAiBhE,EAAC,yBAU3B,SAASgG,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACzB,OAAKA,EAIH,oCACGA,EAAK3F,KAAI,SAACmF,EAAGS,GAAJ,OACR,kBAACd,EAAD,CAAW7E,IAAK2F,EAAQb,QAASI,QAL9B,KCrDJ,SAASU,EAAT,GAA6D,IAA1CxD,EAAyC,EAAzCA,SAAUyD,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,cAChD,OACE,oCACE,gDACc,IACX1D,EAAQ,UAAMA,EAASQ,IAAf,YAAsBR,EAASS,KAAQ,iBAGhDT,GAAY,4BAAQ2D,QAASD,GAAjB,YAEd,kBAACL,EAAD,CAAUC,KAAMG,KCRf,SAASG,EAAT,GAAiD,IAA5B5D,EAA2B,EAA3BA,SAAU0D,EAAiB,EAAjBA,cAAiB,EACbG,wBAAS5D,GADI,mBAC9CwD,EAD8C,KAChCK,EADgC,OAESD,wBAC5D5D,GAHmD,mBAE9C8D,EAF8C,KAErBC,EAFqB,OAKbH,wBAAS5D,GALI,mBAK9CgE,EAL8C,KAKhCC,EALgC,OAM7BL,mBAAS,GANoB,mBAM9CM,EAN8C,KAMxCC,EANwC,KAQrDC,qBAAU,WACR,IAAMC,EAAQC,YACZ,kBAAMH,GAAQ,SAAAI,GAAC,OAAIA,EAAI,OACvB9D,GAEF,OAAO,kBAAM+D,aAAaH,MACzB,CAACH,IAdiD,MAgBvBN,oBAAS,GAhBc,mBAgB9Ca,EAhB8C,KAgBrCC,EAhBqC,KA+CrD,OA7BAN,qBAAU,WACR,IAAMO,EAAS,uCAAG,4BAAApF,EAAA,6DAChBmF,GAAW,GADK,kBAGO5E,EAAc,CAAEC,aAHvB,OAGRL,EAHQ,OAIdmE,EAAgBnE,GAChBqE,EAA2B7E,KAAK0F,OALlB,gDAOdC,QAAQC,MAAR,MACAJ,GAAW,GARG,yDAAH,sDAYZlB,GACDuB,KAAKC,UAAUhB,KAAkBe,KAAKC,UAAUjF,IAC/CyD,GACCM,GACA5E,KAAK0F,MAAQd,EAA0BpD,GAEzCmE,QAAQI,IAAI,8BAEZN,IACAV,EAAgBlE,IAEhB8E,QAAQI,IAAI,uCAGb,CAACf,EAAMnE,IAGR,oCACG0E,GAAW,+CACZ,kBAAClB,EAAD,CACExD,SAAUA,EACVyD,aAAcA,EACdC,cAAeA,KCcRyB,MAnEf,WAAgB,IAAD,EACmBtB,wBAAS5D,GAD5B,mBACND,EADM,KACIoF,EADJ,KAGb,SAASC,EAAYC,GACnB,IAAMC,EAAc,CAClB/E,IAAK8E,EAAIE,OAAOC,SAASnE,QAAQ,GACjCb,IAAK6E,EAAIE,OAAOE,UAAUpE,QAAQ,IAEhC0D,KAAKC,UAAUjF,KAAcgF,KAAKC,UAAUM,IAC9CT,QAAQI,IAAI,mBAAoBK,GAChCH,EAAYG,IAEZT,QAAQI,IAAI,qBAIhB,SAASS,EAAWC,GAClBd,QAAQI,IAAIU,GAGd,SAASC,IACPf,QAAQI,IAAI,uBACRY,UAAUC,YACZD,UAAUC,YAAYC,mBAAmBX,EAAaM,EAAY,CAChEM,WAAY,OAGdnB,QAAQI,IAAI,uBA3BH,MA+BWrB,mBAAS,GA/BpB,mBA+BNM,EA/BM,KA+BAC,EA/BA,KA4Db,OA3BAC,qBAAU,WACR,IAAIC,OAAQrE,EAIZ,YAHiBA,IAAbD,IACFsE,EAAQC,YAAW,kBAAMH,GAAQ,SAAAI,GAAC,OAAIA,EAAI,OAAI5D,IAEzC,kBAAM6D,aAAaH,MACzB,CAACH,EAAMnE,IAEVqE,qBAAU,gBACSpE,IAAbD,GACF6F,MAGD,CAAC1B,IAEJE,qBAAU,WACJyB,UAAUI,aACZJ,UAAUI,YAAYC,MAAM,CAAE9G,KAAM,gBAAiB+G,MAAK,SAAAzG,GACxDmF,QAAQI,IAAIvF,GACS,YAAjBA,EAAO0G,OACTR,SAKL,IAGD,yBAAK5E,UAAU,OACb,kBAAC2C,EAAD,CAAW5D,SAAUA,EAAU0D,cAAemC,MCvDhCS,QACW,cAA7BC,OAAOvG,SAASwG,UAEe,UAA7BD,OAAOvG,SAASwG,UAEhBD,OAAOvG,SAASwG,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBf,WACrBA,UAAUgB,cAAcC,MAAMX,MAAK,SAAAY,GACjCA,EAAaC,kB","file":"static/js/main.01dc8d57.chunk.js","sourcesContent":["// https://gist.github.com/demircancelebi/f0a9c7e1f48be4ea91ca7ad81134459d\nexport function xmlToJson(xml) {\n  // Create the return object\n  let obj = {};\n\n  if (xml.nodeType === 1) {\n    // element\n    // do attributes\n    if (xml.attributes.length > 0) {\n      obj[\"@attributes\"] = {};\n      for (let j = 0; j < xml.attributes.length; j += 1) {\n        const attribute = xml.attributes.item(j);\n        obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n      }\n    }\n  } else if (xml.nodeType === 3) {\n    // text\n    obj = xml.nodeValue;\n  }\n\n  // do children\n  // If just one text node inside\n  if (\n    xml.hasChildNodes() &&\n    xml.childNodes.length === 1 &&\n    xml.childNodes[0].nodeType === 3\n  ) {\n    obj = xml.childNodes[0].nodeValue;\n  } else if (xml.hasChildNodes()) {\n    for (let i = 0; i < xml.childNodes.length; i += 1) {\n      const item = xml.childNodes.item(i);\n      const nodeName = item.nodeName;\n      if (typeof obj[nodeName] === \"undefined\") {\n        obj[nodeName] = xmlToJson(item);\n      } else {\n        if (typeof obj[nodeName].push === \"undefined\") {\n          const old = obj[nodeName];\n          obj[nodeName] = [];\n          obj[nodeName].push(old);\n        }\n        obj[nodeName].push(xmlToJson(item));\n      }\n    }\n  }\n  return obj;\n}\n","import { xmlToJson } from \"./utils\";\nimport {\n  startOfDay,\n  getUnixTime,\n  fromUnixTime,\n  endOfDay,\n  addHours,\n  startOfHour\n} from \"date-fns\";\n\nfunction makeArraySortedByKey(obj) {\n  return Object.keys(obj)\n    .map(function(key) {\n      return [key, obj[key]];\n    })\n    .sort(function(first, second) {\n      return first[0] - second[0];\n    });\n}\n\nfunction convertToForecastData({ tsByValuesObject }) {\n  return makeArraySortedByKey(\n    Object.keys(tsByValuesObject).reduce((previousValue, key) => {\n      const value = tsByValuesObject[key];\n\n      const ts = fromUnixTime(key);\n      const tsStartOfHour = startOfHour(ts);\n\n      // getUnixTime so that the timestamp can be put to object as a key\n      const tsStartOfHourUnix = getUnixTime(tsStartOfHour);\n      const startOfDayUnix = getUnixTime(startOfDay(ts));\n\n      previousValue[startOfDayUnix] = {\n        ...previousValue[startOfDayUnix],\n        [tsStartOfHourUnix]: {\n          ...(previousValue[startOfDayUnix]\n            ? previousValue[startOfDayUnix][tsStartOfHourUnix]\n            : {}),\n          ...value\n        }\n      };\n\n      return previousValue;\n    }, {})\n  ).map(g => ({\n    startOfDay: fromUnixTime(g[0]),\n    items: makeArraySortedByKey(g[1]).map(h => ({\n      ts: fromUnixTime(h[0]),\n      ...h[1]\n    }))\n  }));\n}\n\nfunction timestampsToValuesObject({ responseData }) {\n  return (\n    (responseData &&\n      responseData[\"wfs:FeatureCollection\"] &&\n      responseData[\"wfs:FeatureCollection\"][\"wfs:member\"]) ||\n    []\n  ).reduce((previousValue, currentValue) => {\n    const item = currentValue[\"BsWfs:BsWfsElement\"];\n\n    const ts = new Date(item[\"BsWfs:Time\"]);\n\n    // getUnixTime so that the timestamp can be put to object as a key\n    const tsUnix = getUnixTime(ts);\n\n    const name = item[\"BsWfs:ParameterName\"];\n    const value = Number(item[\"BsWfs:ParameterValue\"]);\n\n    previousValue[tsUnix] = {\n      ...previousValue[tsUnix],\n      ...{ [name]: value }\n    };\n\n    return previousValue;\n  }, {});\n}\n\nasync function fetchXml({ url }) {\n  const result = await fetch(url);\n  return xmlToJson(\n    new DOMParser().parseFromString(await result.text(), \"text/xml\")\n  );\n}\n\nexport async function fetchForecast({ location }) {\n  if (!location) {\n    return undefined;\n  }\n  const startTime = addHours(new Date(), -1).toISOString();\n  const endTime = endOfDay(addHours(new Date(), 3 * 24)).toISOString();\n  const latlon = `${location.lat},${location.lng}`;\n\n  const responseData = await fetchXml({\n    url: `https://opendata.fmi.fi/wfs?request=getFeature&storedquery_id=fmi::forecast::harmonie::surface::point::simple&latlon=${latlon}&parameters=temperature,windspeedms,precipitation1h&starttime=${startTime}&endtime=${endTime}`\n  });\n\n  return convertToForecastData({\n    tsByValuesObject: timestampsToValuesObject({ responseData })\n  });\n}\n","export const OLD_DATA_CHECK_INTERVAL = 30 * 1000;\nexport const FORECAST_REFRESH_INTERVAL = 60 * 60 * 1000;\nexport const LOCATION_UPDATE_INTERVAL = 30 * 60 * 1000;\nexport const INTERESTING_HOURS = [8, 16, 19];\n","import React from \"react\";\n\nexport function Temperature({ temperature }) {\n  return isNaN(temperature) ? (\n    <div>(ei lämpötilatietoa)</div>\n  ) : (\n    <div className=\"temperature\">\n      <span className=\"temperature-number\">{Math.round(temperature)}</span>\n      <span className=\"temperature-degree\">°C</span>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function Precipitation({ precipitation1h }) {\n  let className = \"\";\n  let text = \"\";\n\n  if (isNaN(precipitation1h)) {\n    className = \"light-text\";\n    text = \"(ei sadetietoa)\";\n  } else {\n    if (precipitation1h > 1) {\n      className = \"warning-text\";\n      text = `Voimakas sade (${precipitation1h.toFixed(1)} mm/h)`;\n    } else if (precipitation1h > 0.3) {\n      text = \"Kohtalainen sade\";\n    } else if (precipitation1h > 0) {\n      className = \"light-text\";\n      text = \"Heikko sade\";\n    }\n  }\n\n  return <div className={className}>{text}</div>;\n}\n","import React from \"react\";\n\nexport function Wind({ windspeedms }) {\n  let className = \"\";\n  let text = \"\";\n\n  if (isNaN(windspeedms)) {\n    className = \"light-text\";\n    text = \"(ei tuulitietoa)\";\n  } else {\n    if (windspeedms > 6) {\n      className = \"warning-text\";\n      text = `Navakka tuuli (${Math.round(windspeedms)} m/s)`;\n    } else if (windspeedms > 4.5) {\n      text = \"Kohtalainen tuuli\";\n    } else if (windspeedms > 3) {\n      className = \"light-text\";\n      text = \"Heikko tuuli\";\n    }\n  }\n\n  return <div className={className}>{text}</div>;\n}\n","import React from \"react\";\n\n// https://web.archive.org/web/20050413234644/http://www.fmi.fi/scr/tuotteet/PakkasenPurevuus/funcs.js\nfunction frost(t, v) {\n  return (\n    13.12 +\n    0.6215 * t -\n    13.956 * Math.pow(v, 0.16) +\n    0.4867 * t * Math.pow(v, 0.16)\n  );\n}\n\nexport function FeelsLike({ temperature, windspeedms }) {\n  let className = \"\";\n  let text = \"\";\n\n  if (isNaN(temperature) || isNaN(windspeedms)) {\n    text = \"\";\n  } else {\n    const feelsLikeTemperature = frost(temperature, windspeedms);\n    const diff = Math.abs(feelsLikeTemperature - temperature);\n    if (diff < 3) {\n      text = \"\";\n    } else {\n      text = `Tuntuu kuin ${Math.round(feelsLikeTemperature)}°C`;\n\n      if (diff > 7) {\n        className = \"warning-text\";\n      } else {\n        className = \"light-text\";\n      }\n    }\n  }\n\n  return <div className={className}>{text}</div>;\n}\n","import React from \"react\";\nimport { Temperature } from \"./Temperature\";\nimport { Precipitation } from \"./Precipitation\";\nimport { Wind } from \"./Wind\";\nimport { FeelsLike } from \"./FeelsLike\";\n\nexport function TempWindPrecip({ temperature, windspeedms, precipitation1h }) {\n  return (\n    <>\n      <Temperature temperature={temperature} />\n      <FeelsLike temperature={temperature} windspeedms={windspeedms} />\n      <Wind windspeedms={windspeedms} />\n      <Precipitation precipitation1h={precipitation1h} />\n    </>\n  );\n}\n","import React from \"react\";\nimport { isToday, isTomorrow, format } from \"date-fns\";\n\nfunction getDayOfWeek(date) {\n  var dayOfWeek = date.getDay();\n  return [\n    \"Sunnuntai\",\n    \"Maanantai\",\n    \"Tiistai\",\n    \"Keskiviikko\",\n    \"Torstai\",\n    \"Perjantai\",\n    \"Lauantai\"\n  ][dayOfWeek];\n}\n\nexport function DateInfo({ ts }) {\n  return (\n    <>\n      {getDayOfWeek(ts)}\n      {\" - \"}\n      {isToday(ts)\n        ? \"Tänään\"\n        : isTomorrow(ts)\n        ? \"Huomenna\"\n        : format(ts, \"d.MM.\")}\n    </>\n  );\n}\n","import React from \"react\";\nimport { format } from \"date-fns\";\n\nexport function Time({ ts, includeMinutes } = { includeMinutes: false }) {\n  const formatString = includeMinutes ? \"HH:mm\" : \"H\";\n\n  return <div className=\"time\">klo {format(ts, formatString)}</div>;\n}\n","import React from \"react\";\nimport { TempWindPrecip } from \"./TempWindPrecip\";\nimport { DateInfo } from \"./DateInfo\";\nimport { INTERESTING_HOURS } from \"../config\";\nimport { Time } from \"./Time\";\nimport { addHours, isSameDay } from \"date-fns\";\n\nfunction filterByInterestingHours2({ items, startOfDay }) {\n  const interestingHours = [\n    new Date(),\n    addHours(new Date(), 1),\n    addHours(new Date(), 2)\n  ]\n    .filter(d => isSameDay(d, startOfDay))\n    .map(d => d.getHours())\n    .concat(INTERESTING_HOURS);\n\n  return items.filter(v => interestingHours.indexOf(v[\"ts\"].getHours()) !== -1);\n}\n\nfunction ForOneDay({ dayData }) {\n  const filtered = filterByInterestingHours2({\n    items: dayData[\"items\"],\n    startOfDay: dayData[\"startOfDay\"]\n  });\n\n  if (filtered.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"forecast-date\">\n        <DateInfo ts={dayData[\"startOfDay\"]} />\n      </div>\n      <div className=\"weather-container\">\n        {filtered.map((i, index) => (\n          <div key={index} className=\"weather-item\">\n            <Time ts={i[\"ts\"]} />\n\n            <div className=\"weather-values\">\n              <TempWindPrecip\n                temperature={i[\"temperature\"]}\n                windspeedms={i[\"windspeedms\"]}\n                precipitation1h={i[\"precipitation1h\"]}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport function Forecast({ data }) {\n  if (!data) {\n    return null;\n  }\n  return (\n    <>\n      {data.map((d, index1) => (\n        <ForOneDay key={index1} dayData={d} />\n      ))}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Forecast } from \"./Forecast\";\n\nexport function Weather({ location, forecastData, onLocateClick }) {\n  return (\n    <>\n      <h1>\n        Sääennuste:{\" \"}\n        {location ? `${location.lat},${location.lng}` : \"ei sijaintia\"}\n      </h1>\n\n      {!location && <button onClick={onLocateClick}>Paikanna</button>}\n\n      <Forecast data={forecastData} />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { fetchForecast } from \"../api\";\nimport { FORECAST_REFRESH_INTERVAL, OLD_DATA_CHECK_INTERVAL } from \"../config\";\nimport { Weather } from \"./Weather\";\n\nexport function DataLayer({ location, onLocateClick }) {\n  const [forecastData, setForecastData] = useState(undefined);\n  const [lastForecastDataAttempt, setLastForecastDataAttempt] = useState(\n    undefined\n  );\n  const [lastLocation, setLastLocation] = useState(undefined);\n  const [mark, setMark] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(\n      () => setMark(m => m + 1),\n      OLD_DATA_CHECK_INTERVAL\n    );\n    return () => clearTimeout(timer);\n  }, [mark]);\n\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      try {\n        const result = await fetchForecast({ location });\n        setForecastData(result);\n        setLastForecastDataAttempt(Date.now());\n      } catch (error) {\n        console.error(error);\n        setIsError(true);\n      }\n    };\n    if (\n      !forecastData ||\n      JSON.stringify(lastLocation) !== JSON.stringify(location) ||\n      (forecastData &&\n        lastForecastDataAttempt &&\n        Date.now() - lastForecastDataAttempt > FORECAST_REFRESH_INTERVAL)\n    ) {\n      console.log(\"Need forecast data refresh\");\n\n      fetchData();\n      setLastLocation(location);\n    } else {\n      console.log(\"No need for forecast data refresh\");\n    }\n    // eslint-disable-next-line\n  }, [mark, location]);\n\n  return (\n    <>\n      {isError && \"Virhe haettaessa viimeisimpiä ennusteita.\"}\n      <Weather\n        location={location}\n        forecastData={forecastData}\n        onLocateClick={onLocateClick}\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { DataLayer } from \"./components/DataLayer\";\nimport { LOCATION_UPDATE_INTERVAL } from \"./config\";\n\nfunction App() {\n  const [location, setLocation] = useState(undefined);\n\n  function gotLocation(loc) {\n    const newLocation = {\n      lat: loc.coords.latitude.toFixed(2),\n      lng: loc.coords.longitude.toFixed(2)\n    };\n    if (JSON.stringify(location) !== JSON.stringify(newLocation)) {\n      console.log(\"Got new location\", newLocation);\n      setLocation(newLocation);\n    } else {\n      console.log(\"Got same location\");\n    }\n  }\n\n  function noLocation(err) {\n    console.log(err);\n  }\n\n  function askLocation() {\n    console.log(\"Asking for location\");\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(gotLocation, noLocation, {\n        maximumAge: 30 * 60 * 1000\n      });\n    } else {\n      console.log(\"No location support\");\n    }\n  }\n\n  const [mark, setMark] = useState(0);\n\n  useEffect(() => {\n    let timer = undefined;\n    if (location !== undefined) {\n      timer = setTimeout(() => setMark(m => m + 1), LOCATION_UPDATE_INTERVAL);\n    }\n    return () => clearTimeout(timer);\n  }, [mark, location]);\n\n  useEffect(() => {\n    if (location !== undefined) {\n      askLocation();\n    }\n    // eslint-disable-next-line\n  }, [mark]);\n\n  useEffect(() => {\n    if (navigator.permissions) {\n      navigator.permissions.query({ name: \"geolocation\" }).then(result => {\n        console.log(result);\n        if (result.state === \"granted\") {\n          askLocation();\n        }\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <DataLayer location={location} onLocateClick={askLocation} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}