{"version":3,"sources":["utils.js","api.js","config.js","components/Temperature.js","components/Precipitation.js","components/Wind.js","components/FeelsLike.js","components/TempWindPrecip.js","components/DateInfo.js","components/Time.js","components/Forecast.js","components/LastUpdated.js","components/Weather.js","components/DataLayer.js","App.js","serviceWorker.js","index.js"],"names":["xmlToJson","xml","obj","nodeType","attributes","length","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","i","push","old","hslToRgb","h","s","l","r","g","b","hue2rgb","p","q","t","Math","round","pickHex","color1","color2","weight","w1","w2","makeArraySortedByKey","Object","keys","map","key","sort","first","second","convertToForecastData","tsByValuesObject","reduce","previousValue","value","ts","fromUnixTime","tsStartOfHour","startOfHour","tsStartOfHourUnix","getUnixTime","startOfDayUnix","startOfDay","items","timestampsToValuesObject","responseData","currentValue","Date","tsUnix","name","Number","fetchXml","a","url","fetch","result","DOMParser","text","parseFromString","fetchForecast","location","undefined","startTime","addHours","toISOString","endTime","endOfDay","latlon","lat","lng","queryParams","join","fetchTs","OLD_DATA_CHECK_INTERVAL","FORECAST_REFRESH_INTERVAL","LOCATION_UPDATE_INTERVAL","INTERESTING_HOURS","Temperature","temperature","isFinite","className","Precipitation","precipitation1h","toFixed","Wind","windspeedms","FeelsLike","v","feelsLikeTemperature","pow","diff","abs","TempWindPrecip","DateInfo","getDay","isToday","isTomorrow","format","Time","includeMinutes","formatString","temperatureBackgroundColor","lighterColdRgb","darkerColdRgb","lighterWarmRgb","darkerWarmRgb","ratio","min","max","rgbLighter","rgbDarker","backgroundImage","ForOneDay","dayData","filtered","interestingHours","filter","d","isSameDay","getHours","concat","indexOf","filterByInterestingHours","index","style","Forecast","data","index1","LastUpdated","useState","mark","setMark","useEffect","timer","setTimeout","m","clearTimeout","formatDistance","locale","fi","Weather","forecastData","onLocateClick","onClick","DataLayer","setForecastData","lastForecastDataAttempt","setLastForecastDataAttempt","lastLocation","setLastLocation","isError","setIsError","fetchData","now","console","error","JSON","stringify","log","App","setLocation","locating","setLocating","gotLocation","loc","newLocation","coords","latitude","longitude","noLocation","err","askLocation","navigator","geolocation","getCurrentPosition","maximumAge","permissions","query","then","state","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8256d8e.chunk.js","sourcesContent":["// https://gist.github.com/demircancelebi/f0a9c7e1f48be4ea91ca7ad81134459d\nexport function xmlToJson(xml) {\n  // Create the return object\n  let obj = {};\n\n  if (xml.nodeType === 1) {\n    // element\n    // do attributes\n    if (xml.attributes.length > 0) {\n      obj[\"@attributes\"] = {};\n      for (let j = 0; j < xml.attributes.length; j += 1) {\n        const attribute = xml.attributes.item(j);\n        obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n      }\n    }\n  } else if (xml.nodeType === 3) {\n    // text\n    obj = xml.nodeValue;\n  }\n\n  // do children\n  // If just one text node inside\n  if (\n    xml.hasChildNodes() &&\n    xml.childNodes.length === 1 &&\n    xml.childNodes[0].nodeType === 3\n  ) {\n    obj = xml.childNodes[0].nodeValue;\n  } else if (xml.hasChildNodes()) {\n    for (let i = 0; i < xml.childNodes.length; i += 1) {\n      const item = xml.childNodes.item(i);\n      const nodeName = item.nodeName;\n      if (typeof obj[nodeName] === \"undefined\") {\n        obj[nodeName] = xmlToJson(item);\n      } else {\n        if (typeof obj[nodeName].push === \"undefined\") {\n          const old = obj[nodeName];\n          obj[nodeName] = [];\n          obj[nodeName].push(old);\n        }\n        obj[nodeName].push(xmlToJson(item));\n      }\n    }\n  }\n  return obj;\n}\n\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   {number}  h       The hue\n * @param   {number}  s       The saturation\n * @param   {number}  l       The lightness\n * @return  {Array}           The RGB representation\n */\nexport function hslToRgb(h, s, l) {\n  let r, g, b;\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    const hue2rgb = (p, q, t) => {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    };\n\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n}\n\nexport function pickHex(color1, color2, weight) {\n  const p = weight;\n  const w = p * 2 - 1;\n  const w1 = (w / 1 + 1) / 2;\n  const w2 = 1 - w1;\n  const rgb = [\n    Math.round(color1[0] * w1 + color2[0] * w2),\n    Math.round(color1[1] * w1 + color2[1] * w2),\n    Math.round(color1[2] * w1 + color2[2] * w2)\n  ];\n  return rgb;\n}\n","import { xmlToJson } from \"./utils\";\nimport {\n  startOfDay,\n  getUnixTime,\n  fromUnixTime,\n  endOfDay,\n  addHours,\n  startOfHour\n} from \"date-fns\";\n\nfunction makeArraySortedByKey(obj) {\n  return Object.keys(obj)\n    .map(function(key) {\n      return [key, obj[key]];\n    })\n    .sort(function(first, second) {\n      return first[0] - second[0];\n    });\n}\n\nfunction convertToForecastData({ tsByValuesObject }) {\n  return makeArraySortedByKey(\n    Object.keys(tsByValuesObject).reduce((previousValue, key) => {\n      const value = tsByValuesObject[key];\n\n      const ts = fromUnixTime(key);\n      const tsStartOfHour = startOfHour(ts);\n\n      // getUnixTime so that the timestamp can be put to object as a key\n      const tsStartOfHourUnix = getUnixTime(tsStartOfHour);\n      const startOfDayUnix = getUnixTime(startOfDay(ts));\n\n      previousValue[startOfDayUnix] = {\n        ...previousValue[startOfDayUnix],\n        [tsStartOfHourUnix]: {\n          ...(previousValue[startOfDayUnix]\n            ? previousValue[startOfDayUnix][tsStartOfHourUnix]\n            : {}),\n          ...value\n        }\n      };\n\n      return previousValue;\n    }, {})\n  ).map(g => ({\n    startOfDay: fromUnixTime(g[0]),\n    items: makeArraySortedByKey(g[1]).map(h => ({\n      ts: fromUnixTime(h[0]),\n      ...h[1]\n    }))\n  }));\n}\n\nfunction timestampsToValuesObject({ responseData }) {\n  return (\n    (responseData &&\n      responseData[\"wfs:FeatureCollection\"] &&\n      responseData[\"wfs:FeatureCollection\"][\"wfs:member\"]) ||\n    []\n  ).reduce((previousValue, currentValue) => {\n    const item = currentValue[\"BsWfs:BsWfsElement\"];\n\n    const ts = new Date(item[\"BsWfs:Time\"]);\n\n    // getUnixTime so that the timestamp can be put to object as a key\n    const tsUnix = getUnixTime(ts);\n\n    const name = item[\"BsWfs:ParameterName\"];\n    const value = Number(item[\"BsWfs:ParameterValue\"]);\n\n    previousValue[tsUnix] = {\n      ...previousValue[tsUnix],\n      ...{ [name]: value }\n    };\n\n    return previousValue;\n  }, {});\n}\n\nasync function fetchXml({ url }) {\n  const result = await fetch(url);\n  return xmlToJson(\n    new DOMParser().parseFromString(await result.text(), \"text/xml\")\n  );\n}\n\nexport async function fetchForecast({ location }) {\n  if (!location) {\n    return undefined;\n  }\n  const startTime = addHours(new Date(), -1).toISOString();\n  const endTime = endOfDay(addHours(new Date(), 3 * 24)).toISOString();\n  const latlon = `${location.lat},${location.lng}`;\n\n  const queryParams = [\n    \"request=getFeature\",\n    \"storedquery_id=fmi::forecast::harmonie::surface::point::simple\",\n    \"parameters=temperature,windspeedms,precipitation1h\",\n    `latlon=${latlon}`,\n    `starttime=${startTime}`,\n    `endtime=${endTime}`\n  ].join(\"&\");\n\n  const responseData = await fetchXml({\n    url: \"https://opendata.fmi.fi/wfs?\" + queryParams\n  });\n\n  const fetchTs =\n    responseData &&\n    responseData[\"wfs:FeatureCollection\"] &&\n    new Date(responseData[\"wfs:FeatureCollection\"][\"@attributes\"][\"timeStamp\"]);\n\n  return {\n    fetchTs,\n    items: convertToForecastData({\n      tsByValuesObject: timestampsToValuesObject({ responseData })\n    })\n  };\n}\n","export const OLD_DATA_CHECK_INTERVAL = 30 * 1000;\nexport const FORECAST_REFRESH_INTERVAL = 60 * 60 * 1000;\nexport const LOCATION_UPDATE_INTERVAL = 30 * 60 * 1000;\nexport const INTERESTING_HOURS = [8, 16, 19];\n","import React from \"react\";\n\nexport function Temperature({ temperature }) {\n  return !Number.isFinite(temperature) ? (\n    <div>(ei lämpötilatietoa)</div>\n  ) : (\n    <div className=\"temperature\">\n      <span className=\"temperature-number\">{Math.round(temperature)}</span>\n      <span className=\"temperature-degree\">°C</span>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function Precipitation({ precipitation1h }) {\n  let className = \"\";\n  let text = \"\";\n\n  if (!Number.isFinite(precipitation1h)) {\n    className = \"light-text\";\n    text = \"(ei sadetietoa)\";\n  } else {\n    if (precipitation1h > 1) {\n      className = \"warning-text\";\n      text = `Voimakas sade (${precipitation1h.toFixed(1)} mm/h)`;\n    } else if (precipitation1h > 0.3) {\n      text = \"Kohtalainen sade\";\n    } else if (precipitation1h > 0) {\n      className = \"light-text\";\n      text = \"Heikko sade\";\n    }\n  }\n\n  return <div className={className}>{text}</div>;\n}\n","import React from \"react\";\n\nexport function Wind({ windspeedms }) {\n  let className = \"\";\n  let text = \"\";\n\n  if (!Number.isFinite(windspeedms)) {\n    className = \"light-text\";\n    text = \"(ei tuulitietoa)\";\n  } else {\n    if (windspeedms > 6) {\n      className = \"warning-text\";\n      text = `Navakka tuuli (${Math.round(windspeedms)} m/s)`;\n    } else if (windspeedms > 4.5) {\n      text = \"Kohtalainen tuuli\";\n    } else if (windspeedms > 3) {\n      className = \"light-text\";\n      text = \"Heikko tuuli\";\n    }\n  }\n\n  return <div className={className}>{text}</div>;\n}\n","import React from \"react\";\n\n// https://web.archive.org/web/20050413234644/http://www.fmi.fi/scr/tuotteet/PakkasenPurevuus/funcs.js\nfunction frost(t, v) {\n  return (\n    13.12 +\n    0.6215 * t -\n    13.956 * Math.pow(v, 0.16) +\n    0.4867 * t * Math.pow(v, 0.16)\n  );\n}\n\nexport function FeelsLike({ temperature, windspeedms }) {\n  let className = \"\";\n  let text = \"\";\n\n  if (!Number.isFinite(temperature) || !Number.isFinite(windspeedms)) {\n    text = \"\";\n  } else {\n    const feelsLikeTemperature = frost(temperature, windspeedms);\n    const diff = Math.abs(feelsLikeTemperature - temperature);\n    if (diff < 3) {\n      text = \"\";\n    } else {\n      text = `Tuntuu kuin ${Math.round(feelsLikeTemperature)}°C`;\n\n      if (diff > 7) {\n        className = \"warning-text\";\n      } else {\n        className = \"light-text\";\n      }\n    }\n  }\n\n  return <div className={className}>{text}</div>;\n}\n","import React from \"react\";\nimport { Temperature } from \"./Temperature\";\nimport { Precipitation } from \"./Precipitation\";\nimport { Wind } from \"./Wind\";\nimport { FeelsLike } from \"./FeelsLike\";\n\nexport function TempWindPrecip({ temperature, windspeedms, precipitation1h }) {\n  return (\n    <>\n      <Temperature temperature={temperature} />\n      <FeelsLike temperature={temperature} windspeedms={windspeedms} />\n      <Wind windspeedms={windspeedms} />\n      <Precipitation precipitation1h={precipitation1h} />\n    </>\n  );\n}\n","import React from \"react\";\nimport { isToday, isTomorrow, format } from \"date-fns\";\n\nfunction getDayOfWeek(date) {\n  var dayOfWeek = date.getDay();\n  return [\n    \"Sunnuntai\",\n    \"Maanantai\",\n    \"Tiistai\",\n    \"Keskiviikko\",\n    \"Torstai\",\n    \"Perjantai\",\n    \"Lauantai\"\n  ][dayOfWeek];\n}\n\nexport function DateInfo({ ts }) {\n  return (\n    <>\n      {getDayOfWeek(ts)}\n      {\" - \"}\n      {isToday(ts)\n        ? \"Tänään\"\n        : isTomorrow(ts)\n        ? \"Huomenna\"\n        : format(ts, \"d.MM.\")}\n    </>\n  );\n}\n","import React from \"react\";\nimport { format } from \"date-fns\";\n\nexport function Time({ ts, includeMinutes } = { includeMinutes: false }) {\n  const formatString = includeMinutes ? \"HH:mm\" : \"H\";\n\n  return <div className=\"time\">klo {format(ts, formatString)}</div>;\n}\n","import React from \"react\";\nimport { TempWindPrecip } from \"./TempWindPrecip\";\nimport { DateInfo } from \"./DateInfo\";\nimport { INTERESTING_HOURS } from \"../config\";\nimport { Time } from \"./Time\";\nimport { addHours, isSameDay } from \"date-fns\";\nimport { hslToRgb, pickHex } from \"../utils\";\n\nfunction temperatureBackgroundColor({ temperature }) {\n  if (!Number.isFinite(temperature)) {\n    return undefined;\n  }\n\n  const minTemp = -10;\n  const maxTemp = 25;\n\n  const lighterColdRgb = hslToRgb(245 / 360, 0.8, 0.16);\n  const darkerColdRgb = hslToRgb(245 / 360, 0.85, 0.12);\n  const lighterWarmRgb = hslToRgb(340 / 360, 0.85, 0.16);\n  const darkerWarmRgb = hslToRgb(340 / 360, 0.85, 0.14);\n\n  const ratio = Math.min(\n    Math.max((1 / (maxTemp - minTemp)) * (temperature - minTemp), 0),\n    1\n  );\n\n  const rgbLighter = `rgb(${pickHex(\n    lighterWarmRgb,\n    lighterColdRgb,\n    ratio\n  ).join()})`;\n\n  const rgbDarker = `rgb(${pickHex(\n    darkerWarmRgb,\n    darkerColdRgb,\n    ratio\n  ).join()})`;\n\n  const result = {\n    backgroundImage: `repeating-linear-gradient(\n      45deg,\n      ${rgbLighter},\n      ${rgbLighter} 0.8em,\n      ${rgbDarker} 0.8em,\n      ${rgbDarker} 1.6em\n    )`\n  };\n\n  return result;\n}\n\nfunction filterByInterestingHours({ items, startOfDay }) {\n  const interestingHours = [\n    new Date(),\n    addHours(new Date(), 1),\n    addHours(new Date(), 2)\n  ]\n    .filter(d => isSameDay(d, startOfDay))\n    .map(d => d.getHours())\n    .concat(INTERESTING_HOURS);\n\n  return items.filter(v => interestingHours.indexOf(v[\"ts\"].getHours()) !== -1);\n}\n\nfunction ForOneDay({ dayData }) {\n  const filtered = filterByInterestingHours({\n    items: dayData[\"items\"],\n    startOfDay: dayData[\"startOfDay\"]\n  });\n\n  if (filtered.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"forecast-date\">\n        <DateInfo ts={dayData[\"startOfDay\"]} />\n      </div>\n      <div className=\"weather-container\">\n        {filtered.map((i, index) => (\n          <div\n            key={index}\n            className=\"weather-item\"\n            style={{\n              ...temperatureBackgroundColor({\n                temperature: i[\"temperature\"]\n              })\n            }}\n          >\n            <Time ts={i[\"ts\"]} />\n\n            <div className=\"weather-values\">\n              <TempWindPrecip\n                temperature={i[\"temperature\"]}\n                windspeedms={i[\"windspeedms\"]}\n                precipitation1h={i[\"precipitation1h\"]}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport function Forecast({ data }) {\n  if (!data) {\n    return null;\n  }\n  return (\n    <>\n      {data.map((d, index1) => (\n        <ForOneDay key={index1} dayData={d} />\n      ))}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport formatDistance from \"date-fns/formatDistance\";\nimport { fi } from \"date-fns/locale\";\n\nexport function LastUpdated({ ts }) {\n  const [mark, setMark] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setMark(m => m + 1), 30 * 1000);\n    return () => clearTimeout(timer);\n  }, [mark]);\n\n  if (!ts) {\n  }\n\n  return (\n    <p>\n      {ts ? (\n        <>\n          Päivitetty{\" \"}\n          {formatDistance(new Date(), ts, {\n            locale: fi\n          })}{\" \"}\n          sitten.\n        </>\n      ) : (\n        \"Ei päivitetty\"\n      )}\n    </p>\n  );\n}\n","import React from \"react\";\nimport { Forecast } from \"./Forecast\";\nimport { LastUpdated } from \"./LastUpdated\";\n\nexport function Weather({ location, forecastData, onLocateClick }) {\n  return (\n    <>\n      <h1>Sääennuste</h1>\n\n      {!location && (\n        <>\n          ei sijaintia <button onClick={onLocateClick}>Paikanna</button>\n        </>\n      )}\n\n      <Forecast data={forecastData && forecastData[\"items\"]} />\n      <LastUpdated ts={forecastData && forecastData[\"fetchTs\"]} />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { fetchForecast } from \"../api\";\nimport { FORECAST_REFRESH_INTERVAL, OLD_DATA_CHECK_INTERVAL } from \"../config\";\nimport { Weather } from \"./Weather\";\n\nexport function DataLayer({ location, onLocateClick }) {\n  const [forecastData, setForecastData] = useState(undefined);\n  const [lastForecastDataAttempt, setLastForecastDataAttempt] = useState(\n    undefined\n  );\n  const [lastLocation, setLastLocation] = useState(undefined);\n  const [mark, setMark] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(\n      () => setMark(m => m + 1),\n      OLD_DATA_CHECK_INTERVAL\n    );\n    return () => clearTimeout(timer);\n  }, [mark]);\n\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      try {\n        const result = await fetchForecast({ location });\n        setForecastData(result);\n        setLastForecastDataAttempt(Date.now());\n      } catch (error) {\n        console.error(error);\n        setIsError(true);\n      }\n    };\n    if (\n      !forecastData ||\n      JSON.stringify(lastLocation) !== JSON.stringify(location) ||\n      (forecastData &&\n        lastForecastDataAttempt &&\n        Date.now() - lastForecastDataAttempt > FORECAST_REFRESH_INTERVAL)\n    ) {\n      console.log(\"Need forecast data refresh\");\n\n      fetchData();\n      setLastLocation(location);\n    } else {\n      console.log(\"No need for forecast data refresh\");\n    }\n    // eslint-disable-next-line\n  }, [mark, location]);\n\n  return (\n    <>\n      {isError && \"Virhe haettaessa viimeisimpiä ennusteita.\"}\n      <Weather\n        location={location}\n        forecastData={forecastData}\n        onLocateClick={onLocateClick}\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { DataLayer } from \"./components/DataLayer\";\nimport { LOCATION_UPDATE_INTERVAL } from \"./config\";\n\nfunction App() {\n  const [location, setLocation] = useState(undefined);\n  const [locating, setLocating] = useState(false);\n\n  function gotLocation(loc) {\n    setLocating(false);\n    const newLocation = {\n      lat: loc.coords.latitude.toFixed(2),\n      lng: loc.coords.longitude.toFixed(2)\n    };\n    if (JSON.stringify(location) !== JSON.stringify(newLocation)) {\n      console.log(\"Got new location\", newLocation);\n      setLocation(newLocation);\n    } else {\n      console.log(\"Got same location\");\n    }\n  }\n\n  function noLocation(err) {\n    setLocating(false);\n    console.log(err);\n  }\n\n  function askLocation() {\n    console.log(\"Asking for location\");\n    if (navigator.geolocation) {\n      setLocating(true);\n      navigator.geolocation.getCurrentPosition(gotLocation, noLocation, {\n        maximumAge: 30 * 60 * 1000\n      });\n    } else {\n      console.log(\"No location support\");\n    }\n  }\n\n  const [mark, setMark] = useState(0);\n\n  useEffect(() => {\n    let timer = undefined;\n    if (location !== undefined) {\n      timer = setTimeout(() => setMark(m => m + 1), LOCATION_UPDATE_INTERVAL);\n    }\n    return () => clearTimeout(timer);\n  }, [mark, location]);\n\n  useEffect(() => {\n    if (location !== undefined) {\n      askLocation();\n    }\n    // eslint-disable-next-line\n  }, [mark]);\n\n  useEffect(() => {\n    if (navigator.permissions) {\n      navigator.permissions.query({ name: \"geolocation\" }).then(result => {\n        console.log(result);\n        if (result.state === \"granted\") {\n          askLocation();\n        }\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {locating && \"Paikannetaan...\"}\n      <DataLayer location={location} onLocateClick={askLocation} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}