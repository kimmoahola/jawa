{"version":3,"sources":["utils.js","api.js","config.js","components/Temperature.js","components/Precipitation.js","components/Wind.js","components/FeelsLike.js","components/TempWindPrecip.js","components/Time.js","components/Observation.js","components/Date.js","components/Forecast.js","components/Weather.js","components/DataLayer.js","App.js","serviceWorker.js","index.js"],"names":["xmlToJson","xml","obj","nodeType","attributes","length","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","i","push","old","makeArraySortedByKey","Object","keys","map","key","sort","first","second","convertToForecastData","tsByValuesObject","reduce","previousValue","value","ts","fromUnixTime","tsStartOfHour","startOfHour","tsStartOfHourUnix","getUnixTime","startOfDayUnix","startOfDay","g","items","h","timestampsToValuesObject","responseData","currentValue","Date","tsUnix","name","Number","valueWithHighestKey","arr","lastItem","fetchXml","a","url","fetch","result","DOMParser","text","parseFromString","fetchForecast","place","endTime","endOfDay","addHours","now","toISOString","fetchObservation","startTime","observations","FORECAST_REFRESH_INTERVAL","OBSERVATION_REFRESH_INTERVAL","INTERESTING_HOURS","Temperature","temperature","isNaN","className","Math","round","Precipitation","precipitation1h","toFixed","Wind","windspeedms","FeelsLike","t","v","feelsLikeTemperature","pow","diff","abs","TempWindPrecip","Time","includeMinutes","formatString","format","Observation","data","nextHour","forecastData","iterator","hour","nextHourForecast","getDay","isToday","isTomorrow","ForOneDay","dayData","filtered","filter","indexOf","getHours","Array","_","index2","Forecast","d","index1","Weather","observationData","DATA_CHECK_INTERVAL","DataLayer","useState","undefined","setForecastData","lastForecastDataAttempt","setLastForecastDataAttempt","setObservationData","lastObservationDataAttempt","setLastObservationDataAttempt","mark","setMark","useEffect","timer","setTimeout","m","clearTimeout","logData","console","log","fetchData","PLACE","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d68a3004.chunk.js","sourcesContent":["// https://gist.github.com/demircancelebi/f0a9c7e1f48be4ea91ca7ad81134459d\nexport function xmlToJson(xml) {\n  // Create the return object\n  let obj = {};\n\n  if (xml.nodeType === 1) {\n    // element\n    // do attributes\n    if (xml.attributes.length > 0) {\n      obj[\"@attributes\"] = {};\n      for (let j = 0; j < xml.attributes.length; j += 1) {\n        const attribute = xml.attributes.item(j);\n        obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n      }\n    }\n  } else if (xml.nodeType === 3) {\n    // text\n    obj = xml.nodeValue;\n  }\n\n  // do children\n  // If just one text node inside\n  if (\n    xml.hasChildNodes() &&\n    xml.childNodes.length === 1 &&\n    xml.childNodes[0].nodeType === 3\n  ) {\n    obj = xml.childNodes[0].nodeValue;\n  } else if (xml.hasChildNodes()) {\n    for (let i = 0; i < xml.childNodes.length; i += 1) {\n      const item = xml.childNodes.item(i);\n      const nodeName = item.nodeName;\n      if (typeof obj[nodeName] === \"undefined\") {\n        obj[nodeName] = xmlToJson(item);\n      } else {\n        if (typeof obj[nodeName].push === \"undefined\") {\n          const old = obj[nodeName];\n          obj[nodeName] = [];\n          obj[nodeName].push(old);\n        }\n        obj[nodeName].push(xmlToJson(item));\n      }\n    }\n  }\n  return obj;\n}\n","import { xmlToJson } from \"./utils\";\nimport {\n  startOfDay,\n  getUnixTime,\n  fromUnixTime,\n  endOfDay,\n  addHours,\n  startOfHour\n} from \"date-fns\";\n\nfunction makeArraySortedByKey(obj) {\n  return Object.keys(obj)\n    .map(function(key) {\n      return [key, obj[key]];\n    })\n    .sort(function(first, second) {\n      return first[0] - second[0];\n    });\n}\n\nfunction convertToForecastData({ tsByValuesObject }) {\n  return makeArraySortedByKey(\n    Object.keys(tsByValuesObject).reduce((previousValue, key) => {\n      const value = tsByValuesObject[key];\n\n      const ts = fromUnixTime(key);\n      const tsStartOfHour = startOfHour(ts);\n\n      // getUnixTime so that the timestamp can be put to object as a key\n      const tsStartOfHourUnix = getUnixTime(tsStartOfHour);\n      const startOfDayUnix = getUnixTime(startOfDay(ts));\n\n      previousValue[startOfDayUnix] = {\n        ...previousValue[startOfDayUnix],\n        [tsStartOfHourUnix]: {\n          ...(previousValue[startOfDayUnix]\n            ? previousValue[startOfDayUnix][tsStartOfHourUnix]\n            : {}),\n          ...value\n        }\n      };\n\n      return previousValue;\n    }, {})\n  ).map(g => ({\n    startOfDay: fromUnixTime(g[0]),\n    items: makeArraySortedByKey(g[1]).map(h => ({\n      ts: fromUnixTime(h[0]),\n      ...h[1]\n    }))\n  }));\n}\n\nfunction timestampsToValuesObject({ responseData }) {\n  return (\n    (responseData &&\n      responseData[\"wfs:FeatureCollection\"] &&\n      responseData[\"wfs:FeatureCollection\"][\"wfs:member\"]) ||\n    []\n  ).reduce((previousValue, currentValue) => {\n    // console.log(previousValue, currentValue);\n    const item = currentValue[\"BsWfs:BsWfsElement\"];\n\n    const ts = new Date(item[\"BsWfs:Time\"]);\n\n    // getUnixTime so that the timestamp can be put to object as a key\n    const tsUnix = getUnixTime(ts);\n\n    const name = item[\"BsWfs:ParameterName\"];\n    const value = Number(item[\"BsWfs:ParameterValue\"]);\n\n    previousValue[tsUnix] = {\n      ...previousValue[tsUnix],\n      ...{ [name]: value }\n    };\n\n    return previousValue;\n  }, {});\n}\n\nfunction valueWithHighestKey({ obj }) {\n  const arr = makeArraySortedByKey(obj);\n  const lastItem = arr[arr.length - 1];\n  return {\n    key: lastItem && lastItem[0],\n    value: lastItem && lastItem[1]\n  };\n}\n\nasync function fetchXml({ url }) {\n  const result = await fetch(url);\n  return xmlToJson(\n    new DOMParser().parseFromString(await result.text(), \"text/xml\")\n  );\n}\n\nexport async function fetchForecast({ place }) {\n  const endTime = endOfDay(addHours(Date.now(), 2 * 24));\n\n  const responseData = await fetchXml({\n    url: `https://opendata.fmi.fi/wfs?request=getFeature&storedquery_id=fmi::forecast::harmonie::surface::point::simple&place=${place}&parameters=temperature,windspeedms,precipitation1h&endtime=${endTime.toISOString()}`\n  });\n\n  return convertToForecastData({\n    tsByValuesObject: timestampsToValuesObject({ responseData })\n  });\n}\n\nexport async function fetchObservation({ place }) {\n  const startTime = addHours(Date.now(), -1);\n\n  const responseData = await fetchXml({\n    url: `https://opendata.fmi.fi/wfs?request=getFeature&storedquery_id=fmi::observations::weather::simple&place=${place}&parameters=temperature,windspeedms,precipitation1h&starttime=${startTime.toISOString()}`\n  });\n\n  const { key: ts, value: observations } = valueWithHighestKey({\n    obj: timestampsToValuesObject({ responseData })\n  });\n\n  return (\n    ts &&\n    observations && {\n      ts: fromUnixTime(ts),\n      ...observations\n    }\n  );\n}\n","export const FORECAST_REFRESH_INTERVAL = 60 * 60 * 1000;\nexport const OBSERVATION_REFRESH_INTERVAL = 20 * 60 * 1000;\nexport const INTERESTING_HOURS = [8, 16, 19];\n","import React from \"react\";\n\nexport function Temperature({ temperature }) {\n  if (isNaN(temperature)) {\n    return \"(ei lämpötilatietoa)\";\n  }\n\n  return (\n    <div className=\"temperature\">\n      <span className=\"temperature-number\">{Math.round(temperature)}</span>\n      <span className=\"temperature-degree\">°C</span>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function Precipitation({ precipitation1h }) {\n  let className = \"\";\n  let text = \"\";\n\n  if (isNaN(precipitation1h)) {\n    className = \"light-text\";\n    text = \"(ei sadetietoa)\";\n  } else {\n    if (precipitation1h > 1) {\n      className = \"warning-text\";\n      text = `Voimakas sade (${precipitation1h.toFixed(1)} mm/h)`;\n    } else if (precipitation1h > 0.3) {\n      text = \"Kohtalainen sade\";\n    } else if (precipitation1h > 0) {\n      className = \"light-text\";\n      text = \"Heikko sade\";\n    }\n  }\n\n  return <div className={className}>{text}</div>;\n}\n","import React from \"react\";\n\nexport function Wind({ windspeedms }) {\n  let className = \"\";\n  let text = \"\";\n\n  if (isNaN(windspeedms)) {\n    className = \"light-text\";\n    text = \"(ei tuulitietoa)\";\n  } else {\n    if (windspeedms > 6) {\n      className = \"warning-text\";\n      text = `Navakka tuuli (${Math.round(windspeedms)} m/s)`;\n    } else if (windspeedms > 4.5) {\n      text = \"Kohtalainen tuuli\";\n    } else if (windspeedms > 3) {\n      className = \"light-text\";\n      text = \"Heikko tuuli\";\n    }\n  }\n\n  return <div className={className}>{text}</div>;\n}\n","import React from \"react\";\n\n// https://web.archive.org/web/20050413234644/http://www.fmi.fi/scr/tuotteet/PakkasenPurevuus/funcs.js\nfunction frost(t, v) {\n  return (\n    13.12 +\n    0.6215 * t -\n    13.956 * Math.pow(v, 0.16) +\n    0.4867 * t * Math.pow(v, 0.16)\n  );\n}\n\nexport function FeelsLike({ temperature, windspeedms }) {\n  let className = \"\";\n  let text = \"\";\n\n  if (isNaN(temperature) || isNaN(windspeedms)) {\n    text = \"\";\n  } else {\n    const feelsLikeTemperature = frost(temperature, windspeedms);\n    const diff = Math.abs(feelsLikeTemperature - temperature);\n    if (diff < 3) {\n      text = \"\";\n    } else {\n      text = `Tuntuu kuin ${Math.round(feelsLikeTemperature)}°C`;\n\n      if (diff > 7) {\n        className = \"warning-text\";\n      } else {\n        className = \"light-text\";\n      }\n    }\n  }\n\n  return <div className={className}>{text}</div>;\n}\n","import React from \"react\";\nimport { Temperature } from \"./Temperature\";\nimport { Precipitation } from \"./Precipitation\";\nimport { Wind } from \"./Wind\";\nimport { FeelsLike } from \"./FeelsLike\";\n\nexport function TempWindPrecip({ temperature, windspeedms, precipitation1h }) {\n  return (\n    <div>\n      <Temperature temperature={temperature} />\n      <FeelsLike temperature={temperature} windspeedms={windspeedms} />\n      <Wind windspeedms={windspeedms} />\n      <Precipitation precipitation1h={precipitation1h} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { format } from \"date-fns\";\n\nexport function Time({ ts, includeMinutes } = { includeMinutes: false }) {\n  const formatString = includeMinutes ? \"HH:mm\" : \"HH\";\n\n  return <div className=\"time\">klo {format(ts, formatString)}</div>;\n}\n","import React from \"react\";\nimport { TempWindPrecip } from \"./TempWindPrecip\";\nimport { Time } from \"./Time\";\n\nfunction nextHourForecast({ forecastData }) {\n  if (!forecastData) {\n    return undefined;\n  }\n  for (const iterator of forecastData) {\n    for (const hour of iterator.items) {\n      if (hour.ts >= new Date()) {\n        return hour;\n      }\n    }\n  }\n}\n\nexport function Observation({ data, forecastData }) {\n  const nextHour = nextHourForecast({ forecastData });\n\n  return (\n    <div>\n      <div className=\"forecast-date\">Nyt</div>\n      <div className=\"weather-container\">\n        <div className=\"weather-item\">\n          {data ? (\n            <>\n              <Time ts={data[\"ts\"]} includeMinutes />\n              <TempWindPrecip\n                temperature={data[\"temperature\"]}\n                windspeedms={data[\"windspeedms\"]}\n                precipitation1h={data[\"precipitation1h\"]}\n              />\n            </>\n          ) : (\n            \"N/A\"\n          )}\n        </div>\n\n        {nextHour ? (\n          <div className=\"weather-item\">\n            <Time ts={nextHour[\"ts\"]} />\n            <TempWindPrecip\n              temperature={nextHour[\"temperature\"]}\n              windspeedms={nextHour[\"windspeedms\"]}\n              precipitation1h={nextHour[\"precipitation1h\"]}\n            />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { isToday, isTomorrow, format } from \"date-fns\";\n\nfunction getDayOfWeek(date) {\n  var dayOfWeek = date.getDay();\n  return [\n    \"Sunnuntai\",\n    \"Maanantai\",\n    \"Tiistai\",\n    \"Keskiviikko\",\n    \"Torstai\",\n    \"Perjantai\",\n    \"Lauantai\"\n  ][dayOfWeek];\n}\n\nexport function Date({ ts }) {\n  return (\n    <>\n      {getDayOfWeek(ts)}\n      {\" - \"}\n      {isToday(ts)\n        ? \"Tänään\"\n        : isTomorrow(ts)\n        ? \"Huomenna\"\n        : format(ts, \"d.MM.\")}\n    </>\n  );\n}\n","import React from \"react\";\nimport { TempWindPrecip } from \"./TempWindPrecip\";\nimport { Date } from \"./Date\";\nimport { INTERESTING_HOURS } from \"../config\";\nimport { Time } from \"./Time\";\n\nfunction filterByInterestingHours(arr) {\n  return arr.filter(v => INTERESTING_HOURS.indexOf(v[\"ts\"].getHours()) !== -1);\n}\n\nfunction ForOneDay({ dayData }) {\n  const filtered = filterByInterestingHours(dayData[\"items\"]);\n\n  if (filtered.length === 0) {\n    return \"\";\n  }\n\n  return (\n    <>\n      <div className=\"forecast-date\">\n        <Date ts={dayData[\"startOfDay\"]} />\n      </div>\n      <div className=\"weather-container\">\n        {[...Array(INTERESTING_HOURS.length - filtered.length).keys()].map(\n          (_, index2) => (\n            <div key={index2} className=\"weather-item weather-item-empty\"></div>\n          )\n        )}\n        {filtered.map((i, index2) => (\n          <div key={index2} className=\"weather-item\">\n            <Time ts={i[\"ts\"]} />\n\n            <div className=\"weather-values\">\n              <TempWindPrecip\n                temperature={i[\"temperature\"]}\n                windspeedms={i[\"windspeedms\"]}\n                precipitation1h={i[\"precipitation1h\"]}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport function Forecast({ data }) {\n  return (\n    <>\n      {data\n        ? data.map((d, index1) => <ForOneDay key={index1} dayData={d} />)\n        : \"\"}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Observation } from \"./Observation\";\nimport { Forecast } from \"./Forecast\";\n\nexport function Weather({ place, observationData, forecastData }) {\n  return (\n    <div>\n      <h1>{place}</h1>\n      <div>\n        <Observation data={observationData} forecastData={forecastData} />\n        <Forecast data={forecastData} />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { fetchForecast, fetchObservation } from \"../api\";\nimport {\n  FORECAST_REFRESH_INTERVAL,\n  OBSERVATION_REFRESH_INTERVAL\n} from \"../config\";\nimport { Weather } from \"./Weather\";\n\nconst DATA_CHECK_INTERVAL = 30 * 1000;\n\nexport function DataLayer({ place }) {\n  const [forecastData, setForecastData] = useState(undefined);\n  const [lastForecastDataAttempt, setLastForecastDataAttempt] = useState(\n    undefined\n  );\n  const [observationData, setObservationData] = useState(undefined);\n  const [lastObservationDataAttempt, setLastObservationDataAttempt] = useState(\n    undefined\n  );\n  const [mark, setMark] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setMark(m => m + 1), DATA_CHECK_INTERVAL);\n    return () => clearTimeout(timer);\n  }, [mark]);\n\n  useEffect(() => {\n    async function fetchData() {\n      setForecastData(await fetchForecast({ place }));\n    }\n\n    const logData = {\n      forecastData: !!forecastData,\n      lastForecastDataAttempt: lastForecastDataAttempt,\n      \"Date.now() - lastForecastDataAttempt\":\n        lastForecastDataAttempt && Date.now() - lastForecastDataAttempt,\n      FORECAST_REFRESH_INTERVAL: FORECAST_REFRESH_INTERVAL\n    };\n\n    if (\n      !forecastData ||\n      (forecastData &&\n        lastForecastDataAttempt &&\n        Date.now() - lastForecastDataAttempt > FORECAST_REFRESH_INTERVAL)\n    ) {\n      console.log(\"Need forecast data refresh\", logData);\n\n      setLastForecastDataAttempt(Date.now());\n      fetchData();\n    } else {\n      console.log(\"No need for forecast data refresh\", logData);\n    }\n    // eslint-disable-next-line\n  }, [mark, place]);\n\n  useEffect(() => {\n    async function fetchData() {\n      setObservationData(await fetchObservation({ place }));\n    }\n\n    const logData = {\n      observationData: !!observationData,\n      lastObservationDataAttempt: lastObservationDataAttempt,\n      \"Date.now() - lastObservationDataAttempt\":\n        lastObservationDataAttempt && Date.now() - lastObservationDataAttempt,\n      OBSERVATION_REFRESH_INTERVAL: OBSERVATION_REFRESH_INTERVAL\n    };\n\n    if (\n      !observationData ||\n      (observationData &&\n        lastObservationDataAttempt &&\n        Date.now() - lastObservationDataAttempt > OBSERVATION_REFRESH_INTERVAL)\n    ) {\n      console.log(\"Need observation data refresh\", logData);\n\n      setLastObservationDataAttempt(Date.now());\n      fetchData();\n    } else {\n      console.log(\"No need for observation data refresh\", logData);\n    }\n    // eslint-disable-next-line\n  }, [mark, place]);\n\n  return (\n    <Weather\n      place={place}\n      observationData={observationData}\n      forecastData={forecastData}\n    />\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { DataLayer } from \"./components/DataLayer\";\n\nconst PLACE = \"Tampere\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DataLayer place={PLACE} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}